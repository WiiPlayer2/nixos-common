{ lib
, config
, pkgs
, ...
}:
with lib;
let
  cfg = config.my.programs.variety;
in
{
  config = mkIf cfg.enable {
    home.packages = with pkgs; [
      variety
      feh
    ];

    home.activation.variety-scripts =
      let
        setWallpaperScript = pkgs.writeScript "variety-set-wallpaper" ''
          #!/usr/bin/env bash
          #
          # !!! This script is auto-generated by home-manager !!!
          #
          # This script is run by Variety when a new wallpaper is set. You can use Bash, Python or whatever suits you best.
          # Here you can put custom commands for setting the wallpaper on your specific desktop environment,
          # or run commands like notify-send that notify you of the change. You can also add commands to theme your browser,
          # login screen or whatever you desire.
          #
          # Occasionally new versions of this script are released to bring support for new desktops. To apply them, you
          # should either delete this copy (in ~/.config/data/scripts/) and restart Variety, or merge in the changes yourself.
          # Bug fixes are automatically applied by Variety provided the local copy is never changed.
          #
          # PARAMETERS:
          # $1: The first passed parameter is the absolute path to the wallpaper image to be set as wallpaper
          # (after effects, clock, etc. are applied).
          #
          # $2: The second passed parameter is "auto" when the wallpaper is changed automatically (i.e. regular change), "manual"
          # when the user has triggered the change, or "refresh" when the change is triggered by a change in quotes, clock, etc.
          #
          # $3: The third passed parameter is the absolute path to the original wallpaper image (before effects, clock, etc.)
          #
          # $4: Fourth parameter comes from the display mode setting: "os" means that set_wallpaper should try to
          # leave the OS setting unchanged. "zoom" means to try to fill the screen fully with the provided image.
          # Other parameters that could be passed are the scaling modes used by GNOME:
          # "centered", "scaled", "stretched", "zoom", "spanned", "wallpaper"
          # TODO: Ideally all sections below for different DEs would take this setting into account
          #
          # EXAMPLE:
          # echo "$1" # /home/username/.config/variety/wallpaper/wallpaper-clock-fac0eef772f9b03bd9c0f82a79d72506.jpg
          # echo "$2" # auto
          # echo "$3" # /home/username/Pictures/Wallpapers/Nature/green-tunnel-1920x1080-wallpaper-861.jpg


          # Here you may apply some additional custom operations on the wallpaper before it is applied.
          # In the end put the path to the actual final wallpaper image file in the WP variable.
          # The default is to simply set WP=$1.
          WP=$1
          TRIGGER=$2
          ORIGINAL_WP=$3
          MODE=$4

          # echo "WP:           $WP"
          # echo "TRIGGER:      $TRIGGER"
          # echo "ORIGINAL_WP:  $ORIGINAL_WP"
          # echo "MODE:         $MODE"

          # DISPLAY_MAX=$(($(xrandr --listactivemonitors | wc -l)-2))
          # for i in $(seq 0 $DISPLAY_MAX); do
          #   nitrogen --set-zoom-fill --save --head=$i "$WP" 2> /dev/null
          # done

          feh --bg-fill "$WP" 2> /dev/null

          # XFCE / Lock Screen
          command -v xfconf-query >/dev/null 2>&1
          rc=$?
          if [[ $rc = 0 ]] ; then
              for i in $(xfconf-query -c xfce4-desktop -p /backdrop -l | grep -E -e "screen.*/monitor.*image-path$" -e "screen.*/monitor.*/last-image$"); do
                  xfconf-query -c xfce4-desktop -p "$i" -n -t string -s "" 2> /dev/null
                  xfconf-query -c xfce4-desktop -p "$i" -s "" 2> /dev/null
                  xfconf-query -c xfce4-desktop -p "$i" -s "$WP" 2> /dev/null
              done
          fi
        '';
      in
      lib.hm.dag.entryAfter [ "writeBoundary" ] ''
        run mkdir $VERBOSE_ARG \
            --parents $HOME/.config/variety/scripts
        run cp $VERBOSE_ARG \
            --force ${setWallpaperScript} $HOME/.config/variety/scripts/set_wallpaper
      '';
  };
}
